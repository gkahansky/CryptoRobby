@model CryptoRobert.Admin.Models.RuleSetModel
@using CryptoRobert.Admin.Controllers;
@{
	ViewBag.Title = "Edit";
	Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Edit</h2>

@using (Html.BeginForm("Create", "RuleSets"))
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Create New Rule Set</h4>
		<hr />
		@Html.ValidationSummary(true, "", new { @class = "text-danger" })
		@Html.HiddenFor(model => model.Id)
		@if (Model.Id > 0)
		{
		<div>
			<div class="form-group">
				@Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.PairToBuy, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.PairToBuy, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.PairToBuy, "", new { @class = "text-danger" })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Score, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.DisplayFor(model => model.Score, new { htmlAttributes = new { @class = "form-control" } })
				</div>
			</div>

			<div class="form-group">
				@Html.LabelFor(model => model.Threshold, htmlAttributes: new { @class = "control-label col-md-2" })
				<div class="col-md-10">
					@Html.EditorFor(model => model.Threshold, new { htmlAttributes = new { @class = "form-control" } })
					@Html.ValidationMessageFor(model => model.Threshold, "", new { @class = "text-danger" })
				</div>
			</div>



			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Save" class="btn btn-default" />
			</div>
		</div>
		}
		else
		{
			<h3>Rule Set Not Found</h3>
		}

	</div>
}


@*<div>
		<select class="form-control" id="RulesToAdd" name="StudentGender">
			<option>Select Rule</option>
			<option>1</option>
			<option>Female</option>
		</select>
		<button class="btn btn-primary">Add</button>

	</div>*@


<div>
	@Html.ActionLink("Back to List", "Index")
</div>
